import{o as e,c as t,a as i}from"./index-cba6977d.js";const a=i('<div class="flex flex-row flex-start center bg-gray-100"><div class="basis-1/2"><h1 class="text-3xl font-sans pb-10 pl-10 pt-10 text-gray-800"> Spacial Computing Lab </h1><p class="font-serif pl-10 pr-10 text-gray-500 text-justify"> In the context of my involvement with the Spacial Computing Lab, I applied my skills in TouchDesigner, a powerful visual development platform for interactive media art and live visuals. The Spacial Computing Lab is an innovative environment focusing on the convergence of spatial technologies and computational processes, exploring and exploiting the boundaries between the digital and physical worlds. Within this framework, I embarked on creating a captivating and dynamic installation. My work began with the use of TouchDesigner, a program renowned for its capabilities in interactive and real-time content creation. My creation consisted of three spheres visualized using a noise-generated effect. A noteworthy feature of TouchDesigner is its ability to seamlessly switch between different geometric forms. In this case, each sphere could easily transform into a torus through the use of a switch. Furthermore, I integrated interactive elements into my work using sliders. These controls allowed the user to adjust the level of noise, creating a dynamic and adaptable visual effect. Each sphere was then linked to a video file, giving each form unique content in the form of festival videos. This resulted in a captivating and vibrant display where each sphere represented a different festival video. An intriguing dimension of my creation was the linkage of the noise (amplitude) to audio analysis. This caused the spheres to react to the music, creating an interactive and synesthetic experience. Specifically, the blue sphere responded to the snare, the purple sphere to the rhythm, and the red sphere to the kick, resulting in an immersive visual interpretation of the music. </p></div><div class="basis-1/2"></div></div>',1),n=[a],l={__name:"SCLView",setup(s){return(o,r)=>(e(),t("main",null,n))}};export{l as default};
